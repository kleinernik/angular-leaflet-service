!function(e){e.module("angularLeafletService.config",[]).value("angularLeafletService.config",{debug:!0}),e.module("angularLeafletService.services",[]),e.module("angularLeafletService.directives",["angularLeafletService.services"]),e.module("angularLeafletService",["angularLeafletService.config","angularLeafletService.directives","angularLeafletService.services"])}(angular),angular.module("angularLeafletService.directives").directive("leafletMap",function(e){return{template:"",restrict:"E",scope:{mapboxStyle:"=?"},link:function(a,r){switch(a.id=r.attr("id"),console.log(a.id),e.getProvider()){case"mapbox":a.mapboxStyle||(a.mapboxStyle="mapbox.streets"),a.map=L.mapbox.map(a.id,a.mapboxStyle);break;case"leaflet":a.map=L.map(a.id)}a.map.setView([53.544058899999996,9.996588299999999],18),e.registerMap(a.map,a.id)}}}),angular.module("angularLeafletService.services").provider("$leaflet",function(){var e=[],a=[],r="leaflet";this.setup=function(e){e.provider&&(r=e.provider),"mapbox"===r&&(console.log("access token set"),L.mapbox.accessToken=e.accessToken)},this.$get=function(t){return{registerMap:function(r,t){e[t]=r,a[t]&&(a[t].forEach(function(e){e.resolve(r)}),a[t]=null)},getMap:function(r){var i=t.defer(),l=e[r];return l?i.resolve(l):(a[r]||(a[r]=[]),a[r].push(i)),i.promise},getProvider:function(){return r}}}});