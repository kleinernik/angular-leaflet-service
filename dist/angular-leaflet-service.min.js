!function(e){e.module("angularLeafletService.config",[]).value("angularLeafletService.config",{debug:!0}),e.module("angularLeafletService.services",[]),e.module("angularLeafletService.directives",["angularLeafletService.services"]),e.module("angularLeafletService",["angularLeafletService.config","angularLeafletService.directives","angularLeafletService.services"])}(angular),angular.module("angularLeafletService.directives").directive("leafletMap",function(e){var a=[];return{template:"",restrict:"E",scope:{mapboxStyle:"=?",name:"=?"},link:function(r,n){r.name||(r.name=n.attr("id"));var t=r.name;switch(a[r.name]?(a[r.name]++,t=r.name+"-"+a[r.name]):a[r.name]=1,n.attr("id",t),e.getProvider()){case"mapbox":r.mapboxStyle||(r.mapboxStyle="mapbox.streets"),r.map=L.mapbox.map(t,r.mapboxStyle);break;case"leaflet":r.map=L.map(t)}r.map.setView([53.544058899999996,9.996588299999999],18),e.registerMap(r.map,r.name)}}}),angular.module("angularLeafletService.services").provider("$leaflet",function(){var e=[],a=[],r="leaflet";this.setup=function(e){e.provider&&(r=e.provider),"mapbox"===r&&(console.log("access token set"),L.mapbox.accessToken=e.accessToken)},this.$get=function(n){return{registerMap:function(r,n){if(e[n])throw new Error("Only one map with the same name is allowed at a time.");e[n]=r,a[n]&&(a[n].forEach(function(e){e.resolve(r)}),a[n]=null),r.on("unload",function(){e[n]=null})},getMap:function(r){var t=n.defer(),l=e[r];return l?t.resolve(l):(a[r]||(a[r]=[]),a[r].push(t)),t.promise},getProvider:function(){return r}}}});